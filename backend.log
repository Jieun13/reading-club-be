> Task :compileJava UP-TO-DATE
> Task :processResources UP-TO-DATE
> Task :classes UP-TO-DATE
> Task :resolveMainClassName

> Task :bootRun

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.0)

2025-08-04T02:58:46.966+09:00  INFO 40513 --- [reading-club] [           main] com.readingclub.ReadingClubApplication   : Starting ReadingClubApplication using Java 21.0.4 with PID 40513 (/Users/jiny/dev-log/reading-club/backend/build/classes/java/main started by jiny in /Users/jiny/dev-log/reading-club/backend)
2025-08-04T02:58:46.966+09:00 DEBUG 40513 --- [reading-club] [           main] com.readingclub.ReadingClubApplication   : Running with Spring Boot v3.2.0, Spring v6.1.1
2025-08-04T02:58:46.966+09:00  INFO 40513 --- [reading-club] [           main] com.readingclub.ReadingClubApplication   : No active profile set, falling back to 1 default profile: "default"
2025-08-04T02:58:47.223+09:00  INFO 40513 --- [reading-club] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-04T02:58:47.288+09:00  INFO 40513 --- [reading-club] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 62 ms. Found 11 JPA repository interfaces.
2025-08-04T02:58:47.480+09:00  INFO 40513 --- [reading-club] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-08-04T02:58:47.484+09:00  INFO 40513 --- [reading-club] [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-08-04T02:58:47.484+09:00  INFO 40513 --- [reading-club] [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.16]
2025-08-04T02:58:47.503+09:00  INFO 40513 --- [reading-club] [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-08-04T02:58:47.503+09:00  INFO 40513 --- [reading-club] [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 522 ms
2025-08-04T02:58:47.525+09:00 DEBUG 40513 --- [reading-club] [           main] c.r.security.JwtAuthenticationFilter     : Filter 'jwtAuthenticationFilter' configured for use
2025-08-04T02:58:47.569+09:00  INFO 40513 --- [reading-club] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-04T02:58:47.586+09:00  INFO 40513 --- [reading-club] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.3.1.Final
2025-08-04T02:58:47.596+09:00  INFO 40513 --- [reading-club] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-08-04T02:58:47.675+09:00  INFO 40513 --- [reading-club] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-04T02:58:47.683+09:00  INFO 40513 --- [reading-club] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-08-04T02:58:47.737+09:00  INFO 40513 --- [reading-club] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2404abe2
2025-08-04T02:58:47.737+09:00  INFO 40513 --- [reading-club] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-08-04T02:58:47.757+09:00  WARN 40513 --- [reading-club] [           main] org.hibernate.orm.deprecation            : HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-04T02:58:48.129+09:00  INFO 40513 --- [reading-club] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
Hibernate: 
    alter table group_members 
       add constraint FK77gbvivg23dqb8k6g18cww58c 
       foreign key (group_id) 
       references reading_groups (id)
2025-08-04T02:58:48.275+09:00  INFO 40513 --- [reading-club] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-04T02:58:48.405+09:00  INFO 40513 --- [reading-club] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-04T02:58:49.155+09:00  WARN 40513 --- [reading-club] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-04T02:58:49.161+09:00  WARN 40513 --- [reading-club] [           main] .s.s.UserDetailsServiceAutoConfiguration : 

Using generated security password: 91445be2-44f3-41d1-b8d4-87de7fa3913b

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-08-04T02:58:49.243+09:00  INFO 40513 --- [reading-club] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@a2c6068, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@418eb52a, org.springframework.security.web.context.SecurityContextHolderFilter@f5ff7ab, org.springframework.security.web.header.HeaderWriterFilter@7cfe750a, org.springframework.web.filter.CorsFilter@411f02f8, org.springframework.security.web.authentication.logout.LogoutFilter@139b9795, com.readingclub.security.JwtAuthenticationFilter@740b6628, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c64febb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4d5b24a6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@db3b170, org.springframework.security.web.session.SessionManagementFilter@2bbc3119, org.springframework.security.web.access.ExceptionTranslationFilter@1d4e1f00, org.springframework.security.web.access.intercept.AuthorizationFilter@6c84fdaa]
2025-08-04T02:58:49.314+09:00  INFO 40513 --- [reading-club] [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path ''
2025-08-04T02:58:49.318+09:00  INFO 40513 --- [reading-club] [           main] com.readingclub.ReadingClubApplication   : Started ReadingClubApplication in 2.485 seconds (process running for 2.613)
2025-08-04T02:58:53.469+09:00  INFO 40513 --- [reading-club] [nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-04T02:58:53.469+09:00  INFO 40513 --- [reading-club] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-08-04T02:58:53.470+09:00  INFO 40513 --- [reading-club] [nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 1 ms
2025-08-04T02:58:53.474+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T02:58:53.474+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T02:58:53.522+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:58:53.522+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:58:53.523+09:00  WARN 40513 --- [reading-club] [nio-8080-exec-1] o.s.w.s.h.HandlerMappingIntrospector     : Cache miss for REQUEST dispatch to '/api/books' (previous null). Performing MatchableHandlerMapping lookup. This is logged once only at WARN level, and every time at TRACE.
2025-08-04T02:58:53.526+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
2025-08-04T02:58:53.526+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:01.236+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T02:59:01.239+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:01.241+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:01.274+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T02:59:01.276+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:01.277+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:01.996+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?size=10
2025-08-04T02:59:02.001+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:02.004+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:02.005+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:02.649+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/books/statistics/monthly
2025-08-04T02:59:02.649+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/books?page=0&size=100
2025-08-04T02:59:02.652+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=100
2025-08-04T02:59:02.652+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/books/statistics/monthly
2025-08-04T02:59:02.656+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:02.656+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:02.657+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=100
2025-08-04T02:59:02.658+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/books/statistics/monthly
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        year(b1_0.finished_date),
        month(b1_0.finished_date),
        count(b1_0.id),
        avg(b1_0.rating) 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    group by
        year(b1_0.finished_date),
        month(b1_0.finished_date) 
    order by
        1 desc,
        2 desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:03.432+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:03.435+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:03.436+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:05.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T02:59:05.417+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:05.418+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:05.436+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T02:59:05.438+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:05.439+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:05.470+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /actuator/health
2025-08-04T02:59:05.470+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-08-04T02:59:07.392+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:07.397+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:07.399+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:07.910+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=100
2025-08-04T02:59:07.910+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/books/statistics/monthly
2025-08-04T02:59:07.913+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:07.913+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:07.914+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/books/statistics/monthly
2025-08-04T02:59:07.914+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        year(b1_0.finished_date),
        month(b1_0.finished_date),
        count(b1_0.id),
        avg(b1_0.rating) 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    group by
        year(b1_0.finished_date),
        month(b1_0.finished_date) 
    order by
        1 desc,
        2 desc
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:08.292+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:08.294+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:08.295+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:08.632+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T02:59:08.634+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:08.635+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:08.655+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T02:59:08.657+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:08.657+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:09.371+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T02:59:09.371+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T02:59:09.373+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:09.373+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:09.375+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
2025-08-04T02:59:09.375+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:09.824+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T02:59:09.825+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:09.826+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:09.843+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T02:59:09.845+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:09.845+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:10.207+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:10.209+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:10.210+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:11.230+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/books/statistics/monthly
2025-08-04T02:59:11.230+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=100
2025-08-04T02:59:11.233+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:11.233+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:11.234+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/books/statistics/monthly
2025-08-04T02:59:11.234+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        year(b1_0.finished_date),
        month(b1_0.finished_date),
        count(b1_0.id),
        avg(b1_0.rating) 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    group by
        year(b1_0.finished_date),
        month(b1_0.finished_date) 
    order by
        1 desc,
        2 desc
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:11.649+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T02:59:11.649+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T02:59:11.651+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:11.651+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:11.652+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
2025-08-04T02:59:11.652+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:17.646+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:17.647+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:17.647+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:18.052+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T02:59:18.053+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:18.053+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:18.069+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T02:59:18.070+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:18.071+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:19.081+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:19.083+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:19.084+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:19.706+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T02:59:19.707+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:19.708+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:19.730+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T02:59:19.731+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:19.732+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T02:59:22.434+09:00  INFO 40513 --- [reading-club] [nio-8080-exec-8] o.apache.coyote.http11.Http11Processor   : Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.

java.lang.IllegalArgumentException: Invalid character found in the request target [/api/posts/search?bookTitle=0xed0x950xb40xeb0xa60xac0xed0x8f0xac0xed0x840xb0&page=0&size=5 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:482) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:264) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-08-04T02:59:25.420+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:25.421+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:25.422+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:27.595+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?page=0&size=5
2025-08-04T02:59:27.595+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-08-04T02:59:27.595+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?page=0&size=5
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:54.384+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=REVIEW&size=10
2025-08-04T02:59:54.393+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:54.396+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T02:59:54.857+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=RECOMMENDATION&size=10
2025-08-04T02:59:54.860+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:54.863+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=RECOMMENDATION&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:55.596+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=QUOTE&size=10
2025-08-04T02:59:55.598+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:55.599+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=QUOTE&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:56.075+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=RECOMMENDATION&size=10
2025-08-04T02:59:56.080+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:56.081+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=RECOMMENDATION&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:56.526+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=REVIEW&size=10
2025-08-04T02:59:56.530+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:56.531+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T02:59:57.136+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:57.138+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:57.138+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:57.605+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=REVIEW&size=10
2025-08-04T02:59:57.608+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:57.609+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T02:59:58.007+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=RECOMMENDATION&size=10
2025-08-04T02:59:58.010+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:58.012+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=RECOMMENDATION&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:58.472+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=QUOTE&size=10
2025-08-04T02:59:58.475+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:58.476+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=QUOTE&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T02:59:59.196+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T02:59:59.199+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T02:59:59.199+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:00:33.243+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
2025-08-04T03:00:33.247+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
2025-08-04T03:00:33.249+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:33.250+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:00:40.222+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=REVIEW&size=10
2025-08-04T03:00:40.225+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:40.225+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:00:40.700+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:00:40.702+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:40.703+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:00:41.695+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=REVIEW&size=10
2025-08-04T03:00:41.697+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:41.697+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:00:42.064+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=RECOMMENDATION&size=10
2025-08-04T03:00:42.065+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:42.066+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=RECOMMENDATION&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:00:42.396+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=QUOTE&size=10
2025-08-04T03:00:42.399+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:42.399+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=QUOTE&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:00:42.951+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:00:42.953+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:42.954+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:00:45.588+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
2025-08-04T03:00:45.590+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:45.591+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:00:53.388+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=REVIEW&size=10
2025-08-04T03:00:53.390+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:53.390+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:00:53.899+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:00:53.901+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:00:53.902+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:01:03.425+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?keyword=%EC%95%88&size=10
2025-08-04T03:01:03.428+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%95%88&size=10
2025-08-04T03:01:03.430+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:03.431+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%95%88&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:01:05.555+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?keyword=%EC%95%88&postType=REVIEW&size=10
2025-08-04T03:01:05.561+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%95%88&postType=REVIEW&size=10
2025-08-04T03:01:05.565+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:05.565+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%95%88&postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:01:05.950+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?keyword=%EC%95%88&postType=RECOMMENDATION&size=10
2025-08-04T03:01:05.953+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%95%88&postType=RECOMMENDATION&size=10
2025-08-04T03:01:05.955+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:05.955+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%95%88&postType=RECOMMENDATION&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:01:06.285+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?keyword=%EC%95%88&postType=QUOTE&size=10
2025-08-04T03:01:06.288+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%95%88&postType=QUOTE&size=10
2025-08-04T03:01:06.290+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:06.291+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%95%88&postType=QUOTE&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:01:06.830+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%95%88&size=10
2025-08-04T03:01:06.832+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:06.832+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%95%88&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:01:11.063+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/users/me
2025-08-04T03:01:11.065+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:01:11.065+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:11.066+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:01:11.084+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:01:11.085+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:11.085+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:01:28.188+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:01:28.190+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:28.190+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:01:28.224+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:01:28.225+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:28.226+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:01:29.248+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:01:29.249+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:01:29.250+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:02:42.170+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=REVIEW&size=10
2025-08-04T03:02:42.175+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:42.176+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:02:42.800+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=RECOMMENDATION&size=10
2025-08-04T03:02:42.803+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:42.803+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=RECOMMENDATION&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:02:43.257+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?postType=QUOTE&size=10
2025-08-04T03:02:43.260+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:43.260+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?postType=QUOTE&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:02:44.006+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:02:44.009+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:44.010+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:02:48.825+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&size=10
2025-08-04T03:02:48.828+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&size=10
2025-08-04T03:02:48.829+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:48.830+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:02:50.120+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=REVIEW&size=10
2025-08-04T03:02:50.123+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=REVIEW&size=10
2025-08-04T03:02:50.123+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:50.123+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=REVIEW&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:02:50.455+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=RECOMMENDATION&size=10
2025-08-04T03:02:50.459+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=RECOMMENDATION&size=10
2025-08-04T03:02:50.461+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:50.462+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=RECOMMENDATION&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:02:50.766+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=QUOTE&size=10
2025-08-04T03:02:50.770+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=QUOTE&size=10
2025-08-04T03:02:50.771+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:50.772+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?keyword=%EC%82%AC%EC%8B%A4&postType=QUOTE&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and (
            lower(p1_0.title) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.content) like lower(concat('%', ?, '%')) escape '' 
            or lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape ''
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:02:53.424+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?bookTitle=%EC%82%AC%EC%8B%A4&postType=QUOTE&size=10
2025-08-04T03:02:53.428+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%82%AC%EC%8B%A4&postType=QUOTE&size=10
2025-08-04T03:02:53.429+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:53.430+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%82%AC%EC%8B%A4&postType=QUOTE&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and p1_0.post_type=? 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:02:55.881+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&postType=QUOTE&size=10
2025-08-04T03:02:55.885+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&postType=QUOTE&size=10
2025-08-04T03:02:55.886+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:55.886+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&postType=QUOTE&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and p1_0.post_type=? 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:02:57.626+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
2025-08-04T03:02:57.629+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:02:57.631+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:03:01.525+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=100
2025-08-04T03:03:01.525+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/books/statistics/monthly
2025-08-04T03:03:01.528+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:03:01.528+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:03:01.529+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/books/statistics/monthly
2025-08-04T03:03:01.529+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        year(b1_0.finished_date),
        month(b1_0.finished_date),
        count(b1_0.id),
        avg(b1_0.rating) 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    group by
        year(b1_0.finished_date),
        month(b1_0.finished_date) 
    order by
        1 desc,
        2 desc
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:03:02.020+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:03:02.022+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:03:02.022+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:03:22.689+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
2025-08-04T03:03:22.690+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:03:22.691+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:04:27.323+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:04:27.326+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:04:27.326+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:04:27.361+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:04:27.362+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:04:27.362+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:08.117+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:05:08.120+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:08.121+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:27.206+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:05:27.212+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:27.213+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:42.508+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:05:42.510+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:42.510+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:42.522+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:05:42.523+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:42.523+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:46.733+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:05:46.734+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:46.735+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:46.768+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:05:46.769+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:46.769+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:52.932+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:05:52.934+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:52.934+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:52.946+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:05:52.948+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:52.948+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:05:55.930+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?bookTitle=%EA%B2%80%EC%83%89&size=10
2025-08-04T03:05:55.934+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EA%B2%80%EC%83%89&size=10
2025-08-04T03:05:55.935+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:05:55.936+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EA%B2%80%EC%83%89&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:06:01.804+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:06:01.807+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:06:01.808+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:06:01.821+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:06:01.822+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:06:01.823+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:06:57.810+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:06:57.812+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:06:57.813+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:06.333+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:07:06.334+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:06.335+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:28.484+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:07:28.485+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:28.485+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:38.325+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:07:38.326+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:38.326+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:46.772+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/7
2025-08-04T03:07:46.775+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/7
2025-08-04T03:07:46.776+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:46.777+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/7
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:48.411+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:07:48.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:48.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:49.741+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:07:49.743+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:49.743+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:52.965+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:07:52.967+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:52.968+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:55.141+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:07:55.142+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:55.142+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:57.604+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:07:57.605+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:57.605+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:57.621+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:07:57.622+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:57.622+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:58.935+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:07:58.936+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:58.936+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:07:58.947+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:07:58.948+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:07:58.948+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:08:00.297+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:08:00.299+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:08:00.299+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:08:01.696+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:08:01.699+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:08:01.699+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:14:48.887+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?size=10
2025-08-04T03:14:48.890+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:14:48.892+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:14:48.892+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:14:52.478+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:14:52.480+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:14:52.480+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:14:54.885+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/users/me
2025-08-04T03:14:54.887+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:14:54.887+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:14:54.888+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:14:54.899+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:14:54.900+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:14:54.900+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:14:55.821+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:14:55.824+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:14:55.824+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:14:57.621+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:14:57.622+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:14:57.622+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:14:59.360+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:14:59.361+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:14:59.361+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:15:00.617+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:15:00.618+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:15:00.619+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:15:21.435+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:15:21.441+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:15:21.442+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:15:21.468+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:15:21.469+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:15:21.469+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:15:22.231+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:15:22.232+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:15:22.232+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:15:23.930+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:15:23.932+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:15:23.932+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:22.635+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:16:22.644+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:22.645+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:23.736+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:16:23.738+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:23.739+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:25.625+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:16:25.626+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:25.626+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:25.642+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:16:25.643+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:25.643+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:56.329+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:16:56.337+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:56.341+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:57.152+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:16:57.153+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:57.153+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:57.168+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:16:57.169+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:57.169+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:58.266+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:16:58.267+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:58.267+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:16:59.620+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:16:59.621+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:16:59.621+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:18:53.140+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:18:53.148+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:18:53.149+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:18:54.276+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:18:54.278+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:18:54.280+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:18:54.299+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:18:54.301+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:18:54.301+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:18:56.151+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?bookTitle=%EA%B2%80%EC%83%89&size=10
2025-08-04T03:18:56.154+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EA%B2%80%EC%83%89&size=10
2025-08-04T03:18:56.155+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:18:56.156+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EA%B2%80%EC%83%89&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
2025-08-04T03:18:58.701+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:18:58.702+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:18:58.702+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:19:01.142+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
2025-08-04T03:19:01.144+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
2025-08-04T03:19:01.145+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:19:01.145+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:19:02.488+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:19:02.492+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:19:02.493+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:20:08.187+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
2025-08-04T03:20:08.197+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:08.198+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E%EC%9D%80&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:20:10.128+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E&size=10
2025-08-04T03:20:10.132+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E&size=10
2025-08-04T03:20:10.133+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:10.134+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts/search?bookTitle=%EC%88%98%EB%A7%8E&size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        p1_0.visibility='PUBLIC' 
        and lower(p1_0.book_title) like lower(concat('%', ?, '%')) escape '' 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:20:12.941+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:20:12.943+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:12.943+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:20:15.061+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/books?page=0&size=100
2025-08-04T03:20:15.063+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/books/statistics/monthly
2025-08-04T03:20:15.063+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=100
2025-08-04T03:20:15.064+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:15.065+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/books/statistics/monthly
2025-08-04T03:20:15.065+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=100
2025-08-04T03:20:15.066+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:15.067+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/books/statistics/monthly
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        year(b1_0.finished_date),
        month(b1_0.finished_date),
        count(b1_0.id),
        avg(b1_0.rating) 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    group by
        year(b1_0.finished_date),
        month(b1_0.finished_date) 
    order by
        1 desc,
        2 desc
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:20:15.758+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:20:15.759+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:15.759+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:20:16.166+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/public?page=0&size=20
2025-08-04T03:20:16.168+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:20:16.169+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:16.169+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:20:16.185+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/my
2025-08-04T03:20:16.187+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:20:16.188+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:16.188+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:20:16.709+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/books?page=0&size=10
2025-08-04T03:20:16.710+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/wishlists?page=0&size=100
2025-08-04T03:20:16.713+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:20:16.714+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:16.714+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:20:16.714+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
2025-08-04T03:20:16.715+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:16.715+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:20:17.112+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:20:17.113+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:17.114+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:20:17.128+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:20:17.129+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:17.129+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:20:17.863+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/11
2025-08-04T03:20:17.866+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/11
2025-08-04T03:20:17.867+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:17.868+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/11
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:20:17.891+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/11/members
2025-08-04T03:20:17.893+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/11/members
2025-08-04T03:20:17.894+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:17.895+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/11/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:20:19.650+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:20:19.651+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:19.651+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:20:19.664+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:20:19.665+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:20:19.665+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:22:03.167+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/11/apply
2025-08-04T03:22:03.174+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/reading-groups/11/apply
2025-08-04T03:22:03.177+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:22:03.181+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/reading-groups/11/apply
2025-08-04T03:22:03.206+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-08-04T03:22:03.208+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-08-04T03:22:19.244+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/auth/kakao/callback?code=0we5N23rYC75IsR7OCxCszdBFgBVbMwrdM_m2ZVeZqeXxSdjWoOfmgAAAAQKFxDvAAABmHErl8e2xj-RG-1vuA
2025-08-04T03:22:19.245+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-08-04T03:22:19.245+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/auth/kakao/callback?code=0we5N23rYC75IsR7OCxCszdBFgBVbMwrdM_m2ZVeZqeXxSdjWoOfmgAAAAQKFxDvAAABmHErl8e2xj-RG-1vuA
2025-08-04T03:22:19.443+09:00 ERROR 40513 --- [reading-club] [nio-8080-exec-1] i.n.r.d.DnsServerAddressStreamProviders  : Unable to load io.netty.resolver.dns.macos.MacOSDnsServerAddressStreamProvider, fallback to system defaults. This may result in incorrect DNS resolutions on MacOS. Check whether you have a dependency on 'io.netty:netty-resolver-dns-native-macos'. Use DEBUG level to see the full stack: java.lang.UnsatisfiedLinkError: failed to load the required native library
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.kakao_id=?
Hibernate: 
    insert 
    into
        refresh_tokens
        (created_at, expires_at, token, user_id) 
    values
        (?, ?, ?, ?)
2025-08-04T03:22:19.836+09:00  INFO 40513 --- [reading-club] [nio-8080-exec-1] com.readingclub.service.AuthService      : 카카오 로그인 성공: 4377655294
2025-08-04T03:22:19.871+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/auth/kakao/callback?code=0we5N23rYC75IsR7OCxCszdBFgBVbMwrdM_m2ZVeZqeXxSdjWoOfmgAAAAQKFxDvAAABmHErl8e2xj-RG-1vuA
2025-08-04T03:22:19.873+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-08-04T03:22:19.873+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/auth/kakao/callback?code=0we5N23rYC75IsR7OCxCszdBFgBVbMwrdM_m2ZVeZqeXxSdjWoOfmgAAAAQKFxDvAAABmHErl8e2xj-RG-1vuA
2025-08-04T03:22:19.881+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:22:19.881+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:22:19.881+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:22:19.882+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:22:19.882+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
2025-08-04T03:22:19.882+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:22:19.913+09:00 ERROR 40513 --- [reading-club] [nio-8080-exec-4] com.readingclub.service.AuthService      : 카카오 로그인 실패

org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest: 400 Bad Request from POST https://kauth.kakao.com/oauth/token
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:308) ~[spring-webflux-6.1.1.jar:6.1.1]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 400 BAD_REQUEST from POST https://kauth.kakao.com/oauth/token [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:308) ~[spring-webflux-6.1.1.jar:6.1.1]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.1.jar:6.1.1]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.13.jar:1.1.13]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:446) ~[reactor-netty-core-1.1.13.jar:1.1.13]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:500) ~[reactor-netty-core-1.1.13.jar:1.1.13]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768) ~[reactor-netty-http-1.1.13.jar:1.1.13]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.13.jar:1.1.13]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475) ~[netty-handler-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338) ~[netty-handler-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387) ~[netty-handler-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.Mono.block(Mono.java:1728) ~[reactor-core-3.6.0.jar:3.6.0]
		at com.readingclub.service.AuthService.getKakaoAccessToken(AuthService.java:169) ~[main/:na]
		at com.readingclub.service.AuthService.kakaoLogin(AuthService.java:51) ~[main/:na]
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
		at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
		at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.1.jar:6.1.1]
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.1.jar:6.1.1]
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717) ~[spring-aop-6.1.1.jar:6.1.1]
		at com.readingclub.service.AuthService$$SpringCGLIB$$0.kakaoLogin(<generated>) ~[main/:na]
		at com.readingclub.controller.AuthController.kakaoCallback(AuthController.java:26) ~[main/:na]
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
		at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.16.jar:6.0]
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.16.jar:6.0]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-08-04T03:22:19.916+09:00 ERROR 40513 --- [reading-club] [nio-8080-exec-4] c.readingclub.controller.AuthController  : 카카오 로그인 실패

java.lang.RuntimeException: 카카오 로그인에 실패했습니다: 400 Bad Request from POST https://kauth.kakao.com/oauth/token
	at com.readingclub.service.AuthService.kakaoLogin(AuthService.java:84) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.1.jar:6.1.1]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.1.jar:6.1.1]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717) ~[spring-aop-6.1.1.jar:6.1.1]
	at com.readingclub.service.AuthService$$SpringCGLIB$$0.kakaoLogin(<generated>) ~[main/:na]
	at com.readingclub.controller.AuthController.kakaoCallback(AuthController.java:26) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.16.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.16.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-08-04T03:22:21.473+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:22:21.475+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:22:21.476+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:22:21.493+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:22:21.494+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:22:21.494+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:22:23.648+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /api/reading-groups/11/apply
2025-08-04T03:22:23.649+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:22:23.651+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured POST /api/reading-groups/11/apply
2025-08-04T03:22:23.656+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing POST /error
2025-08-04T03:22:23.657+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-08-04T03:30:16.189+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/auth/kakao/callback?code=5ToLkTb5uKy1kUT3MBUsUNflSU6yw6VFXnhnbTaTz3KrRpoGue3GhAAAAAQKFzVXAAABmHEy3rTOkqTnJF629A
2025-08-04T03:30:16.192+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-08-04T03:30:16.193+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/auth/kakao/callback?code=5ToLkTb5uKy1kUT3MBUsUNflSU6yw6VFXnhnbTaTz3KrRpoGue3GhAAAAAQKFzVXAAABmHEy3rTOkqTnJF629A
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.kakao_id=?
Hibernate: 
    insert 
    into
        refresh_tokens
        (created_at, expires_at, token, user_id) 
    values
        (?, ?, ?, ?)
2025-08-04T03:30:16.373+09:00  INFO 40513 --- [reading-club] [nio-8080-exec-3] com.readingclub.service.AuthService      : 카카오 로그인 성공: 4377655294
2025-08-04T03:30:16.403+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/auth/kakao/callback?code=5ToLkTb5uKy1kUT3MBUsUNflSU6yw6VFXnhnbTaTz3KrRpoGue3GhAAAAAQKFzVXAAABmHEy3rTOkqTnJF629A
2025-08-04T03:30:16.404+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.s.w.a.AnonymousAuthenticationFilter  : Set SecurityContextHolder to anonymous SecurityContext
2025-08-04T03:30:16.404+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/auth/kakao/callback?code=5ToLkTb5uKy1kUT3MBUsUNflSU6yw6VFXnhnbTaTz3KrRpoGue3GhAAAAAQKFzVXAAABmHEy3rTOkqTnJF629A
2025-08-04T03:30:16.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:30:16.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:30:16.414+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:16.414+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:16.414+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
2025-08-04T03:30:16.414+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:16.430+09:00 ERROR 40513 --- [reading-club] [nio-8080-exec-1] com.readingclub.service.AuthService      : 카카오 로그인 실패

org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest: 400 Bad Request from POST https://kauth.kakao.com/oauth/token
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:308) ~[spring-webflux-6.1.1.jar:6.1.1]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ 400 BAD_REQUEST from POST https://kauth.kakao.com/oauth/token [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:308) ~[spring-webflux-6.1.1.jar:6.1.1]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.1.1.jar:6.1.1]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onComplete(FluxPeek.java:260) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415) ~[reactor-netty-core-1.1.13.jar:1.1.13]
		at reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:446) ~[reactor-netty-core-1.1.13.jar:1.1.13]
		at reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:500) ~[reactor-netty-core-1.1.13.jar:1.1.13]
		at reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:768) ~[reactor-netty-http-1.1.13.jar:1.1.13]
		at reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114) ~[reactor-netty-core-1.1.13.jar:1.1.13]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.ssl.SslHandler.unwrap(SslHandler.java:1475) ~[netty-handler-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.ssl.SslHandler.decodeJdkCompatible(SslHandler.java:1338) ~[netty-handler-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.ssl.SslHandler.decode(SslHandler.java:1387) ~[netty-handler-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:529) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:468) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:290) ~[netty-codec-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
		at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.101.Final.jar:4.1.101.Final]
		at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:103) ~[reactor-core-3.6.0.jar:3.6.0]
		at reactor.core.publisher.Mono.block(Mono.java:1728) ~[reactor-core-3.6.0.jar:3.6.0]
		at com.readingclub.service.AuthService.getKakaoAccessToken(AuthService.java:169) ~[main/:na]
		at com.readingclub.service.AuthService.kakaoLogin(AuthService.java:51) ~[main/:na]
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
		at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
		at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.1.jar:6.1.1]
		at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.1.jar:6.1.1]
		at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.1.jar:6.1.1]
		at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717) ~[spring-aop-6.1.1.jar:6.1.1]
		at com.readingclub.service.AuthService$$SpringCGLIB$$0.kakaoLogin(<generated>) ~[main/:na]
		at com.readingclub.controller.AuthController.kakaoCallback(AuthController.java:26) ~[main/:na]
		at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
		at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
		at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.16.jar:6.0]
		at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.1.jar:6.1.1]
		at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.16.jar:6.0]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.0.jar:6.2.0]
		at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.1.jar:6.1.1]
		at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
		at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
		at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-08-04T03:30:16.433+09:00 ERROR 40513 --- [reading-club] [nio-8080-exec-1] c.readingclub.controller.AuthController  : 카카오 로그인 실패

java.lang.RuntimeException: 카카오 로그인에 실패했습니다: 400 Bad Request from POST https://kauth.kakao.com/oauth/token
	at com.readingclub.service.AuthService.kakaoLogin(AuthService.java:84) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123) ~[spring-tx-6.1.1.jar:6.1.1]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385) ~[spring-tx-6.1.1.jar:6.1.1]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119) ~[spring-tx-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765) ~[spring-aop-6.1.1.jar:6.1.1]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717) ~[spring-aop-6.1.1.jar:6.1.1]
	at com.readingclub.service.AuthService$$SpringCGLIB$$0.kakaoLogin(<generated>) ~[main/:na]
	at com.readingclub.controller.AuthController.kakaoCallback(AuthController.java:26) ~[main/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:254) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:182) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564) ~[tomcat-embed-core-10.1.16.jar:6.0]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885) ~[spring-webmvc-6.1.1.jar:6.1.1]
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658) ~[tomcat-embed-core-10.1.16.jar:6.0]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51) ~[tomcat-embed-websocket-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191) ~[spring-security-web-6.2.0.jar:6.2.0]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201) ~[spring-web-6.1.1.jar:6.1.1]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116) ~[spring-web-6.1.1.jar:6.1.1]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-10.1.16.jar:10.1.16]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-08-04T03:30:20.596+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/posts?size=10
2025-08-04T03:30:20.598+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:30:20.599+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:20.599+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:21.448+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/public?page=0&size=20
2025-08-04T03:30:21.451+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:30:21.453+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:21.453+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:21.469+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/my
2025-08-04T03:30:21.473+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:30:21.473+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:21.474+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:22.468+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/11/members/join
2025-08-04T03:30:22.472+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing POST /api/reading-groups/11/members/join
2025-08-04T03:30:22.473+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:22.475+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured POST /api/reading-groups/11/members/join
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.user_id=?
2025-08-04T03:30:22.529+09:00 ERROR 40513 --- [reading-club] [nio-8080-exec-6] c.r.controller.GroupMemberController     : 모임 가입 실패: groupId=11, error=이미 가입한 모임입니다.
2025-08-04T03:30:27.849+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/books?page=0&size=10
2025-08-04T03:30:27.850+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/wishlists?page=0&size=100
2025-08-04T03:30:27.852+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:30:27.852+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:30:27.854+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:27.854+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:27.854+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
2025-08-04T03:30:27.854+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:29.122+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:30:29.123+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:29.123+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:29.137+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:30:29.138+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:29.138+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:30.328+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing POST /api/reading-groups/11/members/join
2025-08-04T03:30:30.329+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:30.330+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured POST /api/reading-groups/11/members/join
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.user_id=?
2025-08-04T03:30:30.341+09:00 ERROR 40513 --- [reading-club] [nio-8080-exec-2] c.r.controller.GroupMemberController     : 모임 가입 실패: groupId=11, error=이미 가입한 모임입니다.
2025-08-04T03:30:32.267+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/users/me
2025-08-04T03:30:32.269+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:30:32.270+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:32.270+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:32.283+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:30:32.283+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:32.284+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:32.294+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:30:32.295+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:32.295+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:34.237+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:30:34.237+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:30:34.238+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:34.238+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:34.238+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
2025-08-04T03:30:34.238+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:34.549+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:30:34.550+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:34.550+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:34.564+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:30:34.565+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:34.565+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:35.126+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:30:35.126+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:35.127+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:35.574+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/books?page=0&size=100
2025-08-04T03:30:35.575+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/books/statistics/monthly
2025-08-04T03:30:35.578+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/books/statistics/monthly
2025-08-04T03:30:35.578+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=100
2025-08-04T03:30:35.579+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:35.579+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:35.579+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/books/statistics/monthly
2025-08-04T03:30:35.579+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        year(b1_0.finished_date),
        month(b1_0.finished_date),
        count(b1_0.id),
        avg(b1_0.rating) 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    group by
        year(b1_0.finished_date),
        month(b1_0.finished_date) 
    order by
        1 desc,
        2 desc
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:35.900+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:30:35.901+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:35.901+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:36.215+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:30:36.218+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:36.219+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:36.232+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:30:36.233+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:36.234+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:37.489+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:30:37.491+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:37.491+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:30:37.838+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:30:37.839+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:37.839+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:30:37.854+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:30:37.855+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:30:37.855+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:31:01.476+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/11
2025-08-04T03:31:01.487+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/11
2025-08-04T03:31:01.502+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:31:01.509+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/11
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:31:01.541+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/11/members
2025-08-04T03:31:01.542+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/11/members
2025-08-04T03:31:01.543+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:31:01.543+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/11/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:31:05.912+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:31:05.923+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:31:05.924+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:31:05.948+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:31:05.948+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:31:05.949+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:32:53.284+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:32:53.286+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:32:53.287+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:32:53.305+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:32:53.305+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:32:53.305+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:32:53.316+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:32:53.316+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:32:53.316+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:32:54.552+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/12/members/join
2025-08-04T03:32:54.556+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing POST /api/reading-groups/12/members/join
2025-08-04T03:32:54.557+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:32:54.558+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured POST /api/reading-groups/12/members/join
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.user_id=?
Hibernate: 
    select
        count(gm1_0.id) 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=?
Hibernate: 
    insert 
    into
        group_members
        (group_id, introduction, joined_at, role, status, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?)
2025-08-04T03:32:54.592+09:00  INFO 40513 --- [reading-club] [nio-8080-exec-3] c.r.service.GroupMemberService           : 모임 가입 성공: groupId=12, userId=3
2025-08-04T03:33:02.193+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/12
2025-08-04T03:33:02.196+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:02.197+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:02.198+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:02.210+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing OPTIONS /api/reading-groups/12/members
2025-08-04T03:33:02.213+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:02.214+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:02.215+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:04.007+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:04.008+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:04.009+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:04.019+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:04.019+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:04.021+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:04.029+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:04.030+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:04.031+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:04.806+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:04.807+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:04.807+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:04.817+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:04.818+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:04.819+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:04.827+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:04.827+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:04.828+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:05.775+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:05.777+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:05.778+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:05.797+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:05.797+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:05.798+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:06.307+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:06.308+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:06.309+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:06.318+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:06.319+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:06.320+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:06.331+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:06.332+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:06.332+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:06.779+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:06.797+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:06.797+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:06.805+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:06.805+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:06.806+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:07.294+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:07.295+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:07.296+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:07.308+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:07.309+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:07.310+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:07.318+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:07.319+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:07.320+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:08.271+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:08.272+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:08.273+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:08.293+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:08.293+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:08.294+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:08.787+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:08.787+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:08.788+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:08.797+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:08.797+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:08.798+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:08.816+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:08.817+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:08.817+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:09.315+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:09.316+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:09.316+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:09.326+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:09.327+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:09.327+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:09.338+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:09.338+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:09.339+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:09.733+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:09.733+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:09.735+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:09.746+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:09.746+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:09.747+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:10.402+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:10.402+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:10.403+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:10.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:10.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:10.414+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:10.423+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:10.424+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:10.425+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:13.059+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:13.059+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:13.060+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:13.076+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:13.077+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:13.078+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:13.784+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:13.785+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:13.785+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:13.799+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:13.800+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:13.801+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:13.824+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:13.824+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:13.825+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:14.201+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:14.201+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.202+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:14.211+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:14.212+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.213+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:14.225+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:14.226+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.226+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:14.438+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:14.439+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.439+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:14.447+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:14.448+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.448+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:14.460+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:14.461+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.462+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:14.610+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:14.611+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.611+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:14.621+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:14.622+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.622+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:14.633+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:14.633+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:14.634+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:15.156+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:15.157+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:15.159+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:15.173+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:15.174+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:15.175+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:16.272+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:16.273+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:16.273+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:16.284+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:16.284+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:16.285+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:16.301+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:16.302+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:16.303+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:16.741+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:16.742+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:16.743+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:16.759+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:16.760+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:16.760+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:17.399+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:17.399+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:17.400+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:17.412+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:17.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:17.413+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:17.428+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:17.428+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:17.429+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:17.776+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:17.776+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:17.777+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:17.791+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:17.792+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:17.793+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:18.545+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:18.546+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:18.546+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:18.558+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:18.559+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:18.560+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:18.568+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:18.568+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:18.569+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:19.971+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:19.972+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:19.972+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:19.989+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:19.990+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:19.991+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:20.652+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:20.653+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:20.653+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:20.665+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:20.666+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:20.666+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:20.677+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:20.677+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:20.678+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:21.120+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:21.121+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:21.121+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:21.135+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:21.136+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:21.137+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:21.468+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:21.469+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:21.470+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:21.486+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:21.487+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:21.488+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:21.496+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:21.496+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:21.497+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:22.751+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:22.752+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:22.752+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:22.768+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:22.769+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:22.769+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:23.222+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/11
2025-08-04T03:33:23.222+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:23.223+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/11
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:23.232+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/11/members
2025-08-04T03:33:23.233+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:23.234+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/11/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:23.620+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:23.621+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:23.621+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:23.631+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/11
2025-08-04T03:33:23.632+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:23.632+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/11
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:23.643+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/11/members
2025-08-04T03:33:23.644+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:23.645+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/11/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:24.700+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:33:24.701+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:24.702+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:24.724+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:33:24.725+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:24.725+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:25.203+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:25.204+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:25.205+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:25.214+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:25.215+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:25.215+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:25.598+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:25.599+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:25.600+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:25.610+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:25.611+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:25.612+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:25.620+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:25.620+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:25.621+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:59.692+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:33:59.695+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:59.696+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:33:59.714+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:33:59.715+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:59.715+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:33:59.724+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:33:59.725+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:33:59.725+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:00.792+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:34:00.793+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:00.793+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:00.806+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:34:00.807+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:00.808+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:00.816+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:34:00.817+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:00.818+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:01.265+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:34:01.266+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.266+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:01.277+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:34:01.278+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.279+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:01.287+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:34:01.288+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.289+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:01.553+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:34:01.554+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.554+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:01.563+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:34:01.563+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.564+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:01.571+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:34:01.572+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.573+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:01.779+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:34:01.779+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.780+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:01.790+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:34:01.790+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.791+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:01.799+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:34:01.800+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.800+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:01.969+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:34:01.971+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.971+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:01.981+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:34:01.981+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.982+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:01.991+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:34:01.992+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:01.992+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:14.567+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:34:14.567+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:14.567+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:14.577+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:34:14.578+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:14.578+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:14.583+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:34:14.583+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:14.584+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:19.180+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:34:19.180+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:19.181+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:19.196+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:34:19.197+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:19.197+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:23.343+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12
2025-08-04T03:34:23.344+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:23.345+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:23.353+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/12/members
2025-08-04T03:34:23.354+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:23.355+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/12/members
Hibernate: 
    select
        count(*) 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.id=?
Hibernate: 
    select
        gm1_0.id,
        gm1_0.group_id,
        gm1_0.introduction,
        gm1_0.joined_at,
        gm1_0.role,
        gm1_0.status,
        gm1_0.updated_at,
        gm1_0.user_id 
    from
        group_members gm1_0 
    where
        gm1_0.group_id=? 
        and gm1_0.status=? 
    order by
        gm1_0.joined_at
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:25.898+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:34:25.898+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:25.899+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:25.911+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:34:25.912+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:25.912+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:41.291+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/users/me
2025-08-04T03:34:41.291+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:41.292+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/users/me
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:41.300+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:34:41.301+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:41.301+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:41.309+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:34:41.310+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:41.310+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:44.322+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:34:44.323+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:44.324+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:44.631+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=100
2025-08-04T03:34:44.632+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:44.632+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/books/statistics/monthly
2025-08-04T03:34:44.632+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=100
2025-08-04T03:34:44.632+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:44.633+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/books/statistics/monthly
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        year(b1_0.finished_date),
        month(b1_0.finished_date),
        count(b1_0.id),
        avg(b1_0.rating) 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    group by
        year(b1_0.finished_date),
        month(b1_0.finished_date) 
    order by
        1 desc,
        2 desc
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:44.990+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:34:44.991+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:44.991+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:45.370+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:34:45.371+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:45.372+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:45.385+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:34:45.386+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:45.387+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:45.726+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:34:45.726+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:34:45.727+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:45.727+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:45.727+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
2025-08-04T03:34:45.727+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:46.190+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:34:46.191+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:46.191+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:46.205+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:34:46.206+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:46.207+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:46.568+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:34:46.570+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:46.570+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:34:47.102+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:34:47.103+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:47.103+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:34:47.115+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:34:47.115+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:34:47.116+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:36:08.979+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:36:08.979+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:36:08.982+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:08.982+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:08.984+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
2025-08-04T03:36:08.984+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:36:09.428+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:36:09.429+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:09.429+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:36:09.446+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:36:09.446+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:09.447+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:36:09.980+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:36:09.982+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:09.982+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-9] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:36:10.420+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=100
2025-08-04T03:36:10.421+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:10.421+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Securing GET /api/books/statistics/monthly
2025-08-04T03:36:10.421+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-2] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=100
2025-08-04T03:36:10.422+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:10.422+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-3] o.s.security.web.FilterChainProxy        : Secured GET /api/books/statistics/monthly
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        year(b1_0.finished_date),
        month(b1_0.finished_date),
        count(b1_0.id),
        avg(b1_0.rating) 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    group by
        year(b1_0.finished_date),
        month(b1_0.finished_date) 
    order by
        1 desc,
        2 desc
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:36:10.866+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Securing GET /api/posts?size=10
2025-08-04T03:36:10.872+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:10.872+09:00 DEBUG 40513 --- [reading-club] [io-8080-exec-10] o.s.security.web.FilterChainProxy        : Secured GET /api/posts?size=10
Hibernate: 
    select
        p1_0.id,
        p1_0.book_author,
        p1_0.book_cover,
        p1_0.book_description,
        p1_0.book_isbn,
        p1_0.book_pub_date,
        p1_0.book_publisher,
        p1_0.book_title,
        p1_0.content,
        p1_0.created_at,
        p1_0.page_number,
        p1_0.post_type,
        p1_0.quote,
        p1_0.quotes,
        p1_0.reason,
        p1_0.recommendation_type,
        p1_0.title,
        p1_0.updated_at,
        p1_0.user_id,
        p1_0.visibility 
    from
        posts p1_0 
    where
        (
            ? is null 
            or p1_0.post_type=?
        ) 
        and (
            ? is null 
            or p1_0.visibility=?
        ) 
        and (
            ? is null 
            or p1_0.user_id=?
        ) 
    order by
        p1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:36:11.251+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/public?page=0&size=20
2025-08-04T03:36:11.252+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:11.253+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-1] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/public?page=0&size=20
Hibernate: 
    select
        rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    where
        rg1_0.is_public 
        and rg1_0.status=? 
    order by
        rg1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:36:11.267+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Securing GET /api/reading-groups/my
2025-08-04T03:36:11.268+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:11.268+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-6] o.s.security.web.FilterChainProxy        : Secured GET /api/reading-groups/my
Hibernate: 
    select
        distinct rg1_0.id,
        rg1_0.author,
        rg1_0.book_cover_image,
        rg1_0.book_title,
        rg1_0.created_at,
        rg1_0.creator_id,
        rg1_0.description,
        rg1_0.duration_hours,
        rg1_0.has_assignment,
        rg1_0.invite_code,
        rg1_0.is_public,
        rg1_0.location,
        rg1_0.max_members,
        rg1_0.meeting_date_time,
        rg1_0.meeting_type,
        rg1_0.meeting_url,
        rg1_0.name,
        rg1_0.publisher,
        rg1_0.status,
        rg1_0.updated_at 
    from
        reading_groups rg1_0 
    join
        group_members m1_0 
            on rg1_0.id=m1_0.group_id 
    where
        m1_0.user_id=? 
        and m1_0.status='ACTIVE' 
        and rg1_0.status=? 
    order by
        rg1_0.updated_at desc
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        m1_0.group_id,
        m1_0.id,
        m1_0.introduction,
        m1_0.joined_at,
        m1_0.role,
        m1_0.status,
        m1_0.updated_at,
        m1_0.user_id 
    from
        group_members m1_0 
    where
        m1_0.group_id=?
2025-08-04T03:36:11.568+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:36:11.569+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:36:11.569+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:11.569+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:11.569+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-8] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
2025-08-04T03:36:11.570+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-4] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
2025-08-04T03:36:13.460+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Securing GET /api/books?page=0&size=10
2025-08-04T03:36:13.460+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Securing GET /api/wishlists?page=0&size=100
2025-08-04T03:36:13.460+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:13.460+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] c.r.security.JwtAuthenticationFilter     : JWT 인증 성공: 사용자 ID 3
2025-08-04T03:36:13.461+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-5] o.s.security.web.FilterChainProxy        : Secured GET /api/books?page=0&size=10
2025-08-04T03:36:13.461+09:00 DEBUG 40513 --- [reading-club] [nio-8080-exec-7] o.s.security.web.FilterChainProxy        : Secured GET /api/wishlists?page=0&size=100
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        b1_0.id,
        b1_0.author,
        b1_0.cover_image,
        b1_0.created_at,
        b1_0.finished_date,
        b1_0.rating,
        b1_0.review,
        b1_0.title,
        b1_0.updated_at,
        b1_0.user_id 
    from
        books b1_0 
    where
        b1_0.user_id=? 
    order by
        b1_0.finished_date desc 
    limit
        ?, ?
Hibernate: 
    select
        w1_0.id,
        w1_0.author,
        w1_0.cover_image,
        w1_0.created_at,
        w1_0.description,
        w1_0.memo,
        w1_0.priority,
        w1_0.published_date,
        w1_0.publisher,
        w1_0.title,
        w1_0.updated_at,
        w1_0.user_id 
    from
        wishlists w1_0 
    where
        w1_0.user_id=? 
    order by
        w1_0.priority,
        w1_0.created_at desc 
    limit
        ?, ?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.created_at,
        u1_0.kakao_id,
        u1_0.nickname,
        u1_0.profile_image,
        u1_0.updated_at 
    from
        users u1_0 
    where
        u1_0.id=?
