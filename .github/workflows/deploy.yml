name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Build (Gradle)
        run: ./gradlew clean bootJar -x test

      - name: Upload JAR to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          source: build/libs/reading-club-be-0.0.1-SNAPSHOT.jar
          target: /home/ec2-user/app/app.jar

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            set -e

            # app.jar가 파일인지 디렉토리인지 확인하고 있으면 삭제
            if [ -d /home/ec2-user/app/app.jar ]; then
              echo "app.jar is a directory, removing..."
              rm -rf /home/ec2-user/app/app.jar
            elif [ -f /home/ec2-user/app/app.jar ]; then
              echo "app.jar is a file, removing..."
              rm -f /home/ec2-user/app/app.jar
            else
              echo "app.jar does not exist, no need to remove"
            fi

            ls -l /home/ec2-user/app/
  
            # GitHub Secrets에서 환경변수 파일 생성
            sudo bash -c 'cat > /etc/myapp.env <<EOF
            ALADIN_API_TTB_KEY=${{ secrets.ALADIN_API_TTB_KEY }}
            CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            JWT_ACCESS_EXPIRATION=${{ secrets.JWT_ACCESS_EXPIRATION }}
            JWT_REFRESH_EXPIRATION=${{ secrets.JWT_REFRESH_EXPIRATION }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}
            KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}
            KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}
            SERVER_PORT=${{ secrets.SERVER_PORT }}
            EOF'

            sudo chown root:root /etc/myapp.env
            sudo chmod 600 /etc/myapp.env
            
            # systemd 재로드 및 재시작
            sudo systemctl daemon-reload
            sudo systemctl restart myapp
            sudo systemctl status myapp --no-pager
